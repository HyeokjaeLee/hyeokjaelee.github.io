{"componentChunkName":"component---src-layouts-post-layout-index-tsx","path":"/typescript-express-server/","result":{"data":{"markdownRemark":{"id":"13a42de4-1c27-51c6-bca9-a1656433c4f8","html":"<p class=\"my-4 whitespace-pre-wrap\">이전에는 typescript로 Express를 이용할 때는 코드는 typescript로 작성하고 이후 해당 코드를 javascript로 컴파일 후 실행하는 방법을 사용했는데 바로 이전 toy project를 진행하면서 ts-node와 nodemon을 이용해 보니 편리한 것 같아 정리해 보려 한다.</p>\n<h2 id=\"전역-패키지-설치\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%EC%A0%84%EC%97%AD-%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"전역 패키지 설치 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전역 패키지 설치</h2>\n<p class=\"my-4 whitespace-pre-wrap\">아래 패키지들은 다른 프로젝트에서도 자주 사용해서 전역으로 설치했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm install -g typescript nodemon ts-node</code></pre></div>\n<ul class=\"list-disc ml-5\">\n<li class=\"list-item list-container\"><strong class=\"font-black\">typescript</strong>: 정적 타입을 지원해서 javascript 보다 유지보수하기 좋다.</li>\n<li class=\"list-item list-container\"><strong class=\"font-black\">nodemon</strong>: 개발환경에서 코드 변화를 감지해 필요할 경우 알아서 서버를 refresh 해 준다.</li>\n<li class=\"list-item list-container\"><strong class=\"font-black\">ts-node</strong>: 원래 typescript로 작성한 코드는 javascript로 컴파일 후 실행이 가능하지만 ts-node를 사용하면 typescript로 작성한 코드를 독립적으로 실행 가능하게 해준다.</li>\n</ul>\n<h2 id=\"환경-설정\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%ED%99%98%EA%B2%BD-%EC%84%A4%EC%A0%95\" aria-label=\"환경 설정 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>환경 설정</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir &lt;프로젝트 이름>\ncd &lt;프로젝트 이름>\nnpm init\ntsc --init\nmkdir src</code></pre></div>\n<h3 id=\"typescript-설정\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#typescript-%EC%84%A4%EC%A0%95\" aria-label=\"typescript 설정 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>typescript 설정</h3>\n<p class=\"my-4 whitespace-pre-wrap\">컴파일 설정 파일이 생성되면 여러 값들이 주석 처리된 상태로 생성되는데 각 설정들의 자세한 내용은 따로 설명하지 않겠다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">나는 다음과 같이 설정했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"exclude\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"node_modules\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token property\">\"include\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"src\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n​\n  <span class=\"token property\">\"compilerOptions\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"ES6\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"module\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"commonjs\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"sourceMap\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"outDir\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"dist\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"strict\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"moduleResolution\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"node\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"esModuleInterop\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"skipLibCheck\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"forceConsistentCasingInFileNames\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"express-설치\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#express-%EC%84%A4%EC%B9%98\" aria-label=\"express 설치 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>express 설치</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># npm 사용시\nnpm install express\nnpm install --save-dev @types/express\n\n# yarn 사용시\nyarn add express\nyarn add @types/express -D</code></pre></div>\n<ul class=\"list-disc ml-5\">\n<li class=\"list-item list-container\"><strong class=\"font-black\">express</strong>: node.js 웹 프레임워크</li>\n<li class=\"list-item list-container\"><strong class=\"font-black\">@types/express</strong>: express 관련 타입들이 정의되어 있는 패키지</li>\n</ul>\n<h3 id=\"실행-스크립트-추가\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#%EC%8B%A4%ED%96%89-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%B6%94%EA%B0%80\" aria-label=\"실행 스크립트 추가 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행 스크립트 추가</h3>\n<p class=\"my-4 whitespace-pre-wrap\">package.json에 다음과 같은 스크립트를 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token property\">\"scripts\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    ...\n    <span class=\"token property\">\"start\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"nodemon --exec ts-node src/app.ts\"</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"코드-작성\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%EC%BD%94%EB%93%9C-%EC%9E%91%EC%84%B1\" aria-label=\"코드 작성 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>코드 작성</h2>\n<p class=\"my-4 whitespace-pre-wrap\">프로젝트의 src 디렉터리에 app.ts 파일을 생성 후 다음과 같은 코드를 작성해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">import</span> express <span class=\"token keyword\">from</span> <span class=\"token string\">'express'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> exp <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> port <span class=\"token operator\">=</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">;</span>\nexp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span>port<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Server listening on port </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>port<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nexp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>req<span class=\"token punctuation\">,</span> res<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> name <span class=\"token operator\">=</span> <span class=\"token operator\">!</span>req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>name <span class=\"token operator\">?</span> <span class=\"token string\">'World'</span> <span class=\"token operator\">:</span> req<span class=\"token punctuation\">.</span>query<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Hello </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p class=\"my-4 whitespace-pre-wrap\">아까 추가한 start 스크립트를 통해 실행할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">npm start</code></pre></div>\n<p class=\"my-4 whitespace-pre-wrap\">로컬 호스트 3000에서 실행되므로 <code class=\"language-text\">http://localhost:3000</code>로 접속하면 <code class=\"language-text\">Hello World</code>가 출력된다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">위 코드는 name 쿼리에 따라 출력 결과를 수정할 수 있다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">만약 <code class=\"language-text\">http://localhost:3000/?name=홍길동</code> 이런 식으로 쿼리 값을 주게 된다면 <code class=\"language-text\">Hello 홍길동</code>이 출력된다.</p>","headings":[{"depth":2,"value":"전역 패키지 설치","id":"전역-패키지-설치"},{"depth":2,"value":"환경 설정","id":"환경-설정"},{"depth":3,"value":"typescript 설정","id":"typescript-설정"},{"depth":3,"value":"express 설치","id":"express-설치"},{"depth":3,"value":"실행 스크립트 추가","id":"실행-스크립트-추가"},{"depth":2,"value":"코드 작성","id":"코드-작성"}],"fields":{"slug":"/typescript-express-server/"},"frontmatter":{"title":"Typescript + Express 서버 구축하기","date":"21년 08월 12일","description":"Typescript를 이용한 Express 서버 구축","tags":["backend"]}},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/briend/"},"frontmatter":{"date":"23년 10월 06일","title":"Briend 번역 채팅앱 개발","titleImage":"../images/contents/briend/briend.jpg","tags":["project","frontend","backend"],"description":"유지비 0원에 도전, 짠내나는 번역 채팅앱 개발기"}},{"fields":{"slug":"/digital-nomad-in-jeju/"},"frontmatter":{"date":"23년 04월 10일","title":"제주도 디지털 노마드 생활기","titleImage":"../images/contents/digital-nomad-in-jeju/jeju-cafe.jpeg","tags":["etc"],"description":"3주간 제주도에서 디지털 노마드로 살아보기"}},{"fields":{"slug":"/install-private-packages-with-yarn-berry/"},"frontmatter":{"date":"23년 01월 20일","title":"Install private packages with yarn berry","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/b40ef5d8-6697-41ff-83e6-3e79aef7617a","tags":["issues"],"description":"Spawn node-gyp ENOENT 에러 해결"}},{"fields":{"slug":"/digital-nomad-in-chiang-mai/"},"frontmatter":{"date":"23년 01월 14일","title":"치앙마이 디지털 노마드 생활기","titleImage":"../images/contents/digital-nomad-in-chiang-mai/yellow.jpg","tags":["etc"],"description":"한 달 반동안 치앙마이에서 디지털 노마드로 살아보기"}},{"fields":{"slug":"/react-component-concept/"},"frontmatter":{"date":"22년 11월 16일","title":"리액트 컴포넌트, 어떤 컨셉으로 개발할까?","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/fe6c2b69-9e2e-4724-8204-858b30eef7a3","tags":["frontend"],"description":"리렌더링을 최소화한 React 기반 컴포넌트 라이브러리를 개발하면서 고민했던 내용"}},{"fields":{"slug":"/react-atomic/"},"frontmatter":{"date":"22년 10월 30일","title":"Atomic Design Pattern 적용기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/846dea6f-cb4f-45db-8f38-634e5e5703b3","tags":["frontend"],"description":"React 제품 개발, Atomic Design Pattern 녹여내기"}},{"fields":{"slug":"/react-design-pattern/"},"frontmatter":{"date":"22년 10월 29일","title":"React 기반 제품을 개발할 때 고려해 볼 만한 디자인 패턴","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/93a45880-52dd-4aff-ad4e-9f1e47f5fe4b","tags":["frontend"],"description":"React 제품 개발, 유용한 몇 가지 디자인 패턴"}},{"fields":{"slug":"/spawn-node-gyp-enoent/"},"frontmatter":{"date":"22년 09월 17일","title":"Spawn node-gyp ENOENT","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/b40ef5d8-6697-41ff-83e6-3e79aef7617a","tags":["issues"],"description":"Spawn node-gyp ENOENT 에러 해결"}},{"fields":{"slug":"/components-styling/"},"frontmatter":{"date":"22년 03월 12일","title":"리액트 컴포넌트 스타일링 정리","titleImage":"../images/contents/components-styling/react.png","tags":["frontend"],"description":"리액트 기반 제품을 개발하면서 고민했던 컴포넌트 스타일링 방법에 대한 고민"}},{"fields":{"slug":"/employment-memoirs/"},"frontmatter":{"date":"22년 02월 16일","title":"대학생 개발자 취업 회고 (1)","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c8375f1e-6bda-4de3-ab2c-55db8719e709","tags":["etc"],"description":"평범한 대학생 개발자가 2022년 상반기 취업하면서 느낀점"}},{"fields":{"slug":"/employment-memoirs2/"},"frontmatter":{"date":"22년 02월 16일","title":"대학생 개발자 취업 회고 (2)","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c8375f1e-6bda-4de3-ab2c-55db8719e709","tags":["etc"],"description":"평범한 대학생 개발자가 2022년 상반기 취업하면서 느낀점"}},{"fields":{"slug":"/blog-remake-review2/"},"frontmatter":{"date":"21년 12월 01일","title":"Gatsby 블로그를 개발하면서","titleImage":"../images/contents/blog-remake-review2/gatsby.png","tags":["etc","frontend"],"description":"Next.js에서 Gatsby로 블로그를 이전하면서 느낀 점"}},{"fields":{"slug":"/covid-19-api-update/"},"frontmatter":{"date":"21년 11월 30일","title":"COVID-19 API 업데이트","titleImage":"../images/contents/covid-19-api-update/covid-19-api.png","tags":["project","backend"],"description":"단계적 일상회복에 따른 Covid-19 API 업데이트"}},{"fields":{"slug":"/korea-webtoon-api-update/"},"frontmatter":{"date":"21년 11월 17일","title":"Webtoon API 개발","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/99b6a086-1283-4088-81cc-4cb857c3ccdb","tags":["project","backend"],"description":"비공식 한국 웹툰 서비스 통합 API 개발"}},{"fields":{"slug":"/nest-js/"},"frontmatter":{"date":"21년 10월 29일","title":"NestJS 웹서버 구축하기","titleImage":"../images/contents/nest-js/nest.jpg","tags":["backend"],"description":"Typescript를 이용한 NestJS 코드 작성"}},{"fields":{"slug":"/knu-lms-scheduler/"},"frontmatter":{"date":"21년 10월 14일","title":"KNU LMS Scheduler 프로젝트","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/5ce48afd-9e2c-47c0-82ed-f9deac8556f6","tags":["project","data","frontend"],"description":"공주대학교 비대면 강의 시스템 편의성 개선 프로젝트"}},{"fields":{"slug":"/gititle-project/"},"frontmatter":{"date":"21년 09월 14일","title":"Gititle 프로젝트","titleImage":"https://user-images.githubusercontent.com/71566740/135963287-e5c18f62-da16-4dda-98cb-1dd4a7c2b720.png","tags":["project","frontend"],"description":"좋은 커밋 메시지를 작성하기 위한 프로젝트"}},{"fields":{"slug":"/sass-compiler/"},"frontmatter":{"date":"21년 09월 01일","title":"Live Sass Compiler 사용하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/f3841a12-33f5-4994-b147-b38b5a3f5e23","tags":["frontend"],"description":"편리한 Sass 사용을 위한 visual studio code 익스텐션"}},{"fields":{"slug":"/nodejs-crawling/"},"frontmatter":{"date":"21년 08월 31일","title":"크롤링을 통한 데이터 수집하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c9cd8b87-f909-475c-80fe-4f63fb05ad2a","tags":["data"],"description":"Node.js 크롤링을 통한 데이터 수집"}},{"fields":{"slug":"/copilot-review/"},"frontmatter":{"date":"21년 08월 26일","title":"Copilot 사용 후기","titleImage":"../images/contents/copilot-review/copilot.png","tags":["etc"],"description":"Github의 코딩 AI, Copilot 한 달 사용 리뷰"}},{"fields":{"slug":"/typescript-express-server/"},"frontmatter":{"date":"21년 08월 12일","title":"Typescript + Express 서버 구축하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/85477ff3-413d-4615-9976-ed0c0cbd9fdc","tags":["backend"],"description":"Typescript를 이용한 Express 서버 구축"}},{"fields":{"slug":"/blog-remake-review1/"},"frontmatter":{"date":"21년 08월 02일","title":"Next.js 블로그를 떠나는 이유","titleImage":"../images/contents/blog-remake-review1/nextjs.png","tags":["etc","frontend"],"description":"블로그 이전 준비"}},{"fields":{"slug":"/good-commit-message/"},"frontmatter":{"date":"21년 07월 03일","title":"Git Commit Message Convention","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/0c061905-eb53-4a8c-a277-6519e1ce2a49","tags":["devOps"],"description":"Git Commit Message 작성을 위한 나와의 약속"}}]},"previous":{"fields":{"slug":"/blog-remake-review1/"},"frontmatter":{"title":"Next.js 블로그를 떠나는 이유","titleImage":"../images/contents/blog-remake-review1/nextjs.png"}},"next":{"fields":{"slug":"/copilot-review/"},"frontmatter":{"title":"Copilot 사용 후기","titleImage":"../images/contents/copilot-review/copilot.png"}}},"pageContext":{"id":"13a42de4-1c27-51c6-bca9-a1656433c4f8","previousPostId":"a6543b8d-dc89-5bc7-b51a-1f84e57582dc","nextPostId":"2c8770ed-df06-50cb-a0d6-5270496cf980"}},"staticQueryHashes":["2039569036","2964855266","3768041815","3959992161","4278130389"],"slicesMap":{}}