{"componentChunkName":"component---src-layouts-post-layout-index-tsx","path":"/nodejs-crawling/","result":{"data":{"markdownRemark":{"id":"0824efef-572d-57eb-8412-29b16dff3553","html":"<p class=\"my-4 whitespace-pre-wrap\">이전에 Tensorflow 학습에 사용하는 데이터 수집을 위한 크롤링 코드를 파이썬으로 작성했던 적이 있었는데 이번에 Javascript를 이용한 프로젝트에서 크롤링할 일이 생겨서 관련 내용을 정리해 봤다.</p>\n<h2 id=\"도구-선택\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%EB%8F%84%EA%B5%AC-%EC%84%A0%ED%83%9D\" aria-label=\"도구 선택 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>도구 선택</h2>\n<p class=\"my-4 whitespace-pre-wrap\">크롤링에 활용 가능한 도구는 언어별로 Jsoup(Java), BeautifulSoup(Python) 등 여러 종류가 있지만 이번 포스트에서는 Node.js 도구들을 이용해 OpenInsider(해외 내부자 거래 정보 사이트)를 크롤링하는 과정을 간단하게 설명해보려 한다.</p>\n<blockquote class=\"border-l-4 border-gray-500 pl-4 italic blockquote-container\">\n<p class=\"my-4 whitespace-pre-wrap\">언어마다 도구는 달라도 동작 방식은 대체로 비슷함</p>\n</blockquote>\n<p class=\"my-4 whitespace-pre-wrap\">Node.js에서도 크롤링에 사용할 수 있는 도구는 많고 그중에 용도에 맞게 선택하면 된다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">해당 페이지는 로그인도 필요 없고 따로 크롤링이 차단되어 있지도 않기 때문에 단순 http 라이브러리와 parsing 라이브러리만 사용해도 크롤링이 가능하다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">만약 크롤링할 페이지가 클라이언트 사이드에서 비동기적으로 렌더링 되거나 크롤러의 접근이 막혀있다면 이 방법으로는 수집 가능한 데이터가 한정적이다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">이런 경우 속도는 느리지만 직접 브라우저를 핸들링해서 크롤링하는 방법이 있다. (ex: Puppeteer)</p>\n<h2 id=\"패키지-설치\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%ED%8C%A8%ED%82%A4%EC%A7%80-%EC%84%A4%EC%B9%98\" aria-label=\"패키지 설치 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>패키지 설치</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">#npm 사용시\nnpm install axios cheerio\n\n#yarn 사용시\nyarn add axios cheerio</code></pre></div>\n<h3 id=\"axios\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#axios\" aria-label=\"axios permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>axios</h3>\n<p class=\"my-4 whitespace-pre-wrap\">주로 사용했던 http 패키지 request가 deprecated 되어서 성능이 좋다는 axios를 사용함</p>\n<h3 id=\"cheerio\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#cheerio\" aria-label=\"cheerio permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>cheerio</h3>\n<p class=\"my-4 whitespace-pre-wrap\">parsing 라이브러리 없이도 axios를 통해 받아온 string 값을 직접 파싱 할 수 있지만 방대한 html 코드를 직접 파싱 하는 건 비효율적임</p>\n<p class=\"my-4 whitespace-pre-wrap\">cheerio는 이러한 데이터를 jquery와 유사한 문법을 통해 파싱 가능하게 해 줌</p>\n<h2 id=\"수집할-대상의-selector-찾기\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%EC%88%98%EC%A7%91%ED%95%A0-%EB%8C%80%EC%83%81%EC%9D%98-selector-%EC%B0%BE%EA%B8%B0\" aria-label=\"수집할 대상의 selector 찾기 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>수집할 대상의 selector 찾기</h2>\n<p class=\"my-4 whitespace-pre-wrap\">크롤러가 찾아갈 정보의 위치를 나타내는 여러 가지 형식이 있지만 우리는 그중 selector를 이용한다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">원하는 정보를 개발자 도구로 열어보면 해당 정보를 포함하는 html 태그를 확인할 수 있다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">우리는 이 태그의 selector를 복사해야 한다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">거래 날짜와 해당 주식의 ticker 값을 받아오기 위한 selector를 복사해보자\n<figure class=\"w-full my-6\"><img src=\"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c9cd8b87-f909-475c-80fe-4f63fb05ad2a\"><figcaption class=\"text-center text-sm text-zinc-400 dark:text-zinc-500 mt-1 not-italic\">image</figcaption></figure></p>\n<h3 id=\"첫-번째-값의-selector\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EA%B0%92%EC%9D%98-selector\" aria-label=\"첫 번째 값의 selector permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫 번째 값의 Selector</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">/*거래 날짜*/\n#tablewrapper > table > tbody > tr:nth-child(1) > td:nth-child(3) > div\n\n/*ticker*/\n#tablewrapper > table > tbody > tr:nth-child(1) > td:nth-child(4) > b > a</code></pre></div>\n<p class=\"my-4 whitespace-pre-wrap\">이 구조를 보면 거래 하나에 대한 정보는 하나의 tr 태그에 포함되어 있음을 알 수 있다.</p>\n<h2 id=\"스크립트-작성\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8-%EC%9E%91%EC%84%B1\" aria-label=\"스크립트 작성 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>스크립트 작성</h2>\n<p class=\"my-4 whitespace-pre-wrap\">편의를 위해 파일명은 index.js로 하고 코드를 작성한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> cheerio <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cheerio'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> axios <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'axios'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">(</span><span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">//크롤링 대상 URL, axios의 get은 비동기 함수이므로 async-await을 사용한다.</span>\n  <span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http://openinsider.com/insider-purchases-25k'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    $ <span class=\"token operator\">=</span> cheerio<span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">const</span> trElements <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#tablewrapper > table > tbody > tr'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> insiderTradeData <span class=\"token operator\">=</span> trElements\n    <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">index<span class=\"token punctuation\">,</span> tr</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">date</span><span class=\"token operator\">:</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'td:nth-child(3) > div'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">ticker</span><span class=\"token operator\">:</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>tr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token string\">'td:nth-child(4) > b > a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">text</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">toArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>insiderTradeData<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2 id=\"실행\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#%EC%8B%A4%ED%96%89\" aria-label=\"실행 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실행</h2>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">node index</code></pre></div>\n<p class=\"my-4 whitespace-pre-wrap\">실행하면 다음과 같은 수집한 정보들이 출력됨을 확인할 수 있다.\n<figure class=\"w-full my-6\"><img src=\"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/dc8fc27f-9dcc-4cfc-b0b2-14ff72dab37b\"><figcaption class=\"text-center text-sm text-zinc-400 dark:text-zinc-500 mt-1 not-italic\">image</figcaption></figure></p>","headings":[{"depth":2,"value":"도구 선택","id":"도구-선택"},{"depth":2,"value":"패키지 설치","id":"패키지-설치"},{"depth":3,"value":"axios","id":"axios"},{"depth":3,"value":"cheerio","id":"cheerio"},{"depth":2,"value":"수집할 대상의 selector 찾기","id":"수집할-대상의-selector-찾기"},{"depth":3,"value":"첫 번째 값의 Selector","id":"첫-번째-값의-selector"},{"depth":2,"value":"스크립트 작성","id":"스크립트-작성"},{"depth":2,"value":"실행","id":"실행"}],"fields":{"slug":"/nodejs-crawling/"},"frontmatter":{"title":"크롤링을 통한 데이터 수집하기","date":"21년 08월 31일","description":"Node.js 크롤링을 통한 데이터 수집","tags":["data"]}},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/briend/"},"frontmatter":{"date":"23년 10월 06일","title":"Briend 번역 채팅앱 개발","titleImage":"../images/contents/briend/briend.jpg","tags":["project","frontend","backend"],"description":"유지비 0원에 도전, 짠내나는 번역 채팅앱 개발기"}},{"fields":{"slug":"/digital-nomad-in-jeju/"},"frontmatter":{"date":"23년 04월 10일","title":"제주도 디지털 노마드 생활기","titleImage":"../images/contents/digital-nomad-in-jeju/jeju-cafe.jpeg","tags":["etc"],"description":"3주간 제주도에서 디지털 노마드로 살아보기"}},{"fields":{"slug":"/install-private-packages-with-yarn-berry/"},"frontmatter":{"date":"23년 01월 20일","title":"Install private packages with yarn berry","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/b40ef5d8-6697-41ff-83e6-3e79aef7617a","tags":["issues"],"description":"Spawn node-gyp ENOENT 에러 해결"}},{"fields":{"slug":"/digital-nomad-in-chiang-mai/"},"frontmatter":{"date":"23년 01월 14일","title":"치앙마이 디지털 노마드 생활기","titleImage":"../images/contents/digital-nomad-in-chiang-mai/yellow.jpg","tags":["etc"],"description":"한 달 반동안 치앙마이에서 디지털 노마드로 살아보기"}},{"fields":{"slug":"/react-component-concept/"},"frontmatter":{"date":"22년 11월 16일","title":"리액트 컴포넌트, 어떤 컨셉으로 개발할까?","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/fe6c2b69-9e2e-4724-8204-858b30eef7a3","tags":["frontend"],"description":"리렌더링을 최소화한 React 기반 컴포넌트 라이브러리를 개발하면서 고민했던 내용"}},{"fields":{"slug":"/react-atomic/"},"frontmatter":{"date":"22년 10월 30일","title":"Atomic Design Pattern 적용기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/846dea6f-cb4f-45db-8f38-634e5e5703b3","tags":["frontend"],"description":"React 제품 개발, Atomic Design Pattern 녹여내기"}},{"fields":{"slug":"/react-design-pattern/"},"frontmatter":{"date":"22년 10월 29일","title":"React 기반 제품을 개발할 때 고려해 볼 만한 디자인 패턴","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/93a45880-52dd-4aff-ad4e-9f1e47f5fe4b","tags":["frontend"],"description":"React 제품 개발, 유용한 몇 가지 디자인 패턴"}},{"fields":{"slug":"/spawn-node-gyp-enoent/"},"frontmatter":{"date":"22년 09월 17일","title":"Spawn node-gyp ENOENT","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/b40ef5d8-6697-41ff-83e6-3e79aef7617a","tags":["issues"],"description":"Spawn node-gyp ENOENT 에러 해결"}},{"fields":{"slug":"/components-styling/"},"frontmatter":{"date":"22년 03월 12일","title":"리액트 컴포넌트 스타일링 정리","titleImage":"../images/contents/components-styling/react.png","tags":["frontend"],"description":"리액트 기반 제품을 개발하면서 고민했던 컴포넌트 스타일링 방법에 대한 고민"}},{"fields":{"slug":"/employment-memoirs/"},"frontmatter":{"date":"22년 02월 16일","title":"대학생 개발자 취업 회고 (1)","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c8375f1e-6bda-4de3-ab2c-55db8719e709","tags":["etc"],"description":"평범한 대학생 개발자가 2022년 상반기 취업하면서 느낀점"}},{"fields":{"slug":"/employment-memoirs2/"},"frontmatter":{"date":"22년 02월 16일","title":"대학생 개발자 취업 회고 (2)","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c8375f1e-6bda-4de3-ab2c-55db8719e709","tags":["etc"],"description":"평범한 대학생 개발자가 2022년 상반기 취업하면서 느낀점"}},{"fields":{"slug":"/blog-remake-review2/"},"frontmatter":{"date":"21년 12월 01일","title":"Gatsby 블로그를 개발하면서","titleImage":"../images/contents/blog-remake-review2/gatsby.png","tags":["etc","frontend"],"description":"Next.js에서 Gatsby로 블로그를 이전하면서 느낀 점"}},{"fields":{"slug":"/covid-19-api-update/"},"frontmatter":{"date":"21년 11월 30일","title":"COVID-19 API 업데이트","titleImage":"../images/contents/covid-19-api-update/covid-19-api.png","tags":["project","backend"],"description":"단계적 일상회복에 따른 Covid-19 API 업데이트"}},{"fields":{"slug":"/korea-webtoon-api-update/"},"frontmatter":{"date":"21년 11월 17일","title":"Webtoon API 개발","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/99b6a086-1283-4088-81cc-4cb857c3ccdb","tags":["project","backend"],"description":"비공식 한국 웹툰 서비스 통합 API 개발"}},{"fields":{"slug":"/nest-js/"},"frontmatter":{"date":"21년 10월 29일","title":"NestJS 웹서버 구축하기","titleImage":"../images/contents/nest-js/nest.jpg","tags":["backend"],"description":"Typescript를 이용한 NestJS 코드 작성"}},{"fields":{"slug":"/knu-lms-scheduler/"},"frontmatter":{"date":"21년 10월 14일","title":"KNU LMS Scheduler 프로젝트","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/5ce48afd-9e2c-47c0-82ed-f9deac8556f6","tags":["project","data","frontend"],"description":"공주대학교 비대면 강의 시스템 편의성 개선 프로젝트"}},{"fields":{"slug":"/gititle-project/"},"frontmatter":{"date":"21년 09월 14일","title":"Gititle 프로젝트","titleImage":"https://user-images.githubusercontent.com/71566740/135963287-e5c18f62-da16-4dda-98cb-1dd4a7c2b720.png","tags":["project","frontend"],"description":"좋은 커밋 메시지를 작성하기 위한 프로젝트"}},{"fields":{"slug":"/sass-compiler/"},"frontmatter":{"date":"21년 09월 01일","title":"Live Sass Compiler 사용하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/f3841a12-33f5-4994-b147-b38b5a3f5e23","tags":["frontend"],"description":"편리한 Sass 사용을 위한 visual studio code 익스텐션"}},{"fields":{"slug":"/nodejs-crawling/"},"frontmatter":{"date":"21년 08월 31일","title":"크롤링을 통한 데이터 수집하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c9cd8b87-f909-475c-80fe-4f63fb05ad2a","tags":["data"],"description":"Node.js 크롤링을 통한 데이터 수집"}},{"fields":{"slug":"/copilot-review/"},"frontmatter":{"date":"21년 08월 26일","title":"Copilot 사용 후기","titleImage":"../images/contents/copilot-review/copilot.png","tags":["etc"],"description":"Github의 코딩 AI, Copilot 한 달 사용 리뷰"}},{"fields":{"slug":"/typescript-express-server/"},"frontmatter":{"date":"21년 08월 12일","title":"Typescript + Express 서버 구축하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/85477ff3-413d-4615-9976-ed0c0cbd9fdc","tags":["backend"],"description":"Typescript를 이용한 Express 서버 구축"}},{"fields":{"slug":"/blog-remake-review1/"},"frontmatter":{"date":"21년 08월 02일","title":"Next.js 블로그를 떠나는 이유","titleImage":"../images/contents/blog-remake-review1/nextjs.png","tags":["etc","frontend"],"description":"블로그 이전 준비"}},{"fields":{"slug":"/good-commit-message/"},"frontmatter":{"date":"21년 07월 03일","title":"Git Commit Message Convention","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/0c061905-eb53-4a8c-a277-6519e1ce2a49","tags":["devOps"],"description":"Git Commit Message 작성을 위한 나와의 약속"}}]},"previous":{"fields":{"slug":"/copilot-review/"},"frontmatter":{"title":"Copilot 사용 후기","titleImage":"../images/contents/copilot-review/copilot.png"}},"next":{"fields":{"slug":"/sass-compiler/"},"frontmatter":{"title":"Live Sass Compiler 사용하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/f3841a12-33f5-4994-b147-b38b5a3f5e23"}}},"pageContext":{"id":"0824efef-572d-57eb-8412-29b16dff3553","previousPostId":"2c8770ed-df06-50cb-a0d6-5270496cf980","nextPostId":"1703fb05-42d2-53b9-b60d-ca30bd180545"}},"staticQueryHashes":["2039569036","2964855266","3768041815","3959992161","4278130389"],"slicesMap":{}}