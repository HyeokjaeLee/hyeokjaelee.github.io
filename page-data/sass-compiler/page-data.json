{"componentChunkName":"component---src-layouts-post-layout-index-tsx","path":"/sass-compiler/","result":{"data":{"markdownRemark":{"id":"1703fb05-42d2-53b9-b60d-ca30bd180545","html":"<p class=\"my-4 whitespace-pre-wrap\">나는 프론트엔드 작업을 할때 CSS보다 Sass(SCSS)를 선호한다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">그중에서도 CSS와 호환성을 갖춘 SCSS를 선호하며 어느 정도 스타일링할 코드가 많아지면 CSS를 사용하다가도 SCSS로 코드를 옮겨서 작업한다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">Sass는 편리한 점이 정말 많은데 대표적으로 함수나 변수를 선언해서 사용할 수 있어서 수정이 편하고 코드의 가독성이 좋다는 게 가장 큰 이유 같다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">보통 node.js 환경에서 프로젝트를 진행한다면 Sass를 지원해주는 모듈들이 많아 Sass파일 자체를 import해서 사용이 가능하지만 그게 아닌경우에는 작성한 Sass를 컴파일한 CSS를 import해서 이용한다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">오늘은 이런 non-node.js환경에서 Sass의 더욱 편리한 사용을 도와주는 2가지 VSCODE 익스텐션과 기본 설정을 소개해보려 한다.</p>\n<h2 id=\"sassscss\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-3xl\"><a href=\"#sassscss\" aria-label=\"sassscss permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sass(SCSS)</h2>\n<p class=\"my-4 whitespace-pre-wrap\">Sass는 CSS로 컴파일 가능한 스크립트 언어이다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">CSS의 확장판 정도라고 생각하면 될 것 같다.</p>\n<h3 id=\"vscode-익스텐션-설치\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#vscode-%EC%9D%B5%EC%8A%A4%ED%85%90%EC%85%98-%EC%84%A4%EC%B9%98\" aria-label=\"vscode 익스텐션 설치 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>VSCODE 익스텐션 설치</h3>\n<ul class=\"list-disc ml-5\">\n<li class=\"list-item list-container\">\n<p class=\"my-4 whitespace-pre-wrap\"><strong class=\"font-black\"><a href=\"https://marketplace.visualstudio.com/items?itemName=ritwickdey.live-sass\" class=\"text-blue-500 hover:underline\">Live Sass Compiler</a>:</strong> Sass를 CSS로 실시간 컴파일해주는 익스텐션</p>\n</li>\n<li class=\"list-item list-container\">\n<p class=\"my-4 whitespace-pre-wrap\"><strong class=\"font-black\"><a href=\"https://marketplace.visualstudio.com/items?itemName=Syler.sass-indented\" class=\"text-blue-500 hover:underline\">Sass</a>:</strong> Sass의 highlighting, autocomplete &#x26; Formatter 지원해주는 익스텐션</p>\n</li>\n</ul>\n<h3 id=\"live-sass-compiler-설정\" style=\"position:relative;\" class=\"font-bold mt-10 mb-4 text-2xl\"><a href=\"#live-sass-compiler-%EC%84%A4%EC%A0%95\" aria-label=\"live sass compiler 설정 permalink\" class=\"anchor before\" class=\"text-blue-500 hover:underline\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Live Sass Compiler 설정</h3>\n<p class=\"my-4 whitespace-pre-wrap\">Sass 익스텐션의 경우엔 별다른 설정이 필요 없지만 Live Sass Compiler는 나에게 맞는 형태로 설정이 필요하다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">설정을 위해 VSCODE의 <code class=\"language-text\">settings.json</code> 파일에 다음 내용을 추가해주자</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"liveSassCompile.settings.formats\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"format\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"expanded\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"extensionName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".css\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"savePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~/../css\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"format\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"compressed\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"extensionName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".min.css\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"savePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~/../css\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote class=\"border-l-4 border-gray-500 pl-4 italic blockquote-container\">\n<p class=\"my-4 whitespace-pre-wrap\">min.css는 css의 공백과 줄 바꿈을 삭제해 용량을 줄인 파일로 전송량을 줄일 수 있다.</p>\n</blockquote>\n<p class=\"my-4 whitespace-pre-wrap\">나는 어차피 작성은 Sass로 하고 컴파일된 CSS를 직접 수정할 필요가 없다.</p>\n<p class=\"my-4 whitespace-pre-wrap\">min.css파일만 필요하기 때문에 다음과 같은 설정으로 사용한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"liveSassCompile.settings.formats\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token property\">\"format\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"compressed\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"extensionName\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\".min.css\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token property\">\"savePath\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"~/../css\"</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p class=\"my-4 whitespace-pre-wrap\">설정후 우측 하단에 Watch Sass를 클릭하시면 Sass파일의 수정을 감지해 실시간으로 CSS파일을 만들어준다.\n<figure class=\"w-full my-6\"><img src=\"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/a9616878-13e1-4d9a-a56c-52820b54d377\"><figcaption class=\"text-center text-sm text-zinc-400 dark:text-zinc-500 mt-1 not-italic\">image</figcaption></figure>\n나는 다음과 같은 구조를 주로 사용하기 때문에 이렇게 설정했지만 다른 설정을 원하시면 <code class=\"language-text\">savePath</code>부분에 원하는 컴파일 위치를 작성해서 사용하면 된다.\n<figure class=\"w-full my-6\"><img src=\"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/f6ae0829-8fff-4537-9c5f-dff53fc22559\"><figcaption class=\"text-center text-sm text-zinc-400 dark:text-zinc-500 mt-1 not-italic\">image</figcaption></figure></p>","headings":[{"depth":2,"value":"Sass(SCSS)","id":"sassscss"},{"depth":3,"value":"VSCODE 익스텐션 설치","id":"vscode-익스텐션-설치"},{"depth":3,"value":"Live Sass Compiler 설정","id":"live-sass-compiler-설정"}],"fields":{"slug":"/sass-compiler/"},"frontmatter":{"title":"Live Sass Compiler 사용하기","date":"21년 09월 01일","description":"편리한 Sass 사용을 위한 visual studio code 익스텐션","tags":["frontend"]}},"allMarkdownRemark":{"nodes":[{"fields":{"slug":"/briend/"},"frontmatter":{"date":"23년 10월 06일","title":"Briend 번역 채팅앱 개발","titleImage":"../images/contents/briend/briend.jpg","tags":["project","frontend","backend"],"description":"유지비 0원에 도전, 짠내나는 번역 채팅앱 개발기"}},{"fields":{"slug":"/digital-nomad-in-jeju/"},"frontmatter":{"date":"23년 04월 10일","title":"제주도 디지털 노마드 생활기","titleImage":"../images/contents/digital-nomad-in-jeju/jeju-cafe.jpeg","tags":["etc"],"description":"3주간 제주도에서 디지털 노마드로 살아보기"}},{"fields":{"slug":"/install-private-packages-with-yarn-berry/"},"frontmatter":{"date":"23년 01월 20일","title":"Install private packages with yarn berry","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/b40ef5d8-6697-41ff-83e6-3e79aef7617a","tags":["issues"],"description":"Spawn node-gyp ENOENT 에러 해결"}},{"fields":{"slug":"/digital-nomad-in-chiang-mai/"},"frontmatter":{"date":"23년 01월 14일","title":"치앙마이 디지털 노마드 생활기","titleImage":"../images/contents/digital-nomad-in-chiang-mai/yellow.jpg","tags":["etc"],"description":"한 달 반동안 치앙마이에서 디지털 노마드로 살아보기"}},{"fields":{"slug":"/react-component-concept/"},"frontmatter":{"date":"22년 11월 16일","title":"리액트 컴포넌트, 어떤 컨셉으로 개발할까?","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/fe6c2b69-9e2e-4724-8204-858b30eef7a3","tags":["frontend"],"description":"리렌더링을 최소화한 React 기반 컴포넌트 라이브러리를 개발하면서 고민했던 내용"}},{"fields":{"slug":"/react-atomic/"},"frontmatter":{"date":"22년 10월 30일","title":"Atomic Design Pattern 적용기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/846dea6f-cb4f-45db-8f38-634e5e5703b3","tags":["frontend"],"description":"React 제품 개발, Atomic Design Pattern 녹여내기"}},{"fields":{"slug":"/react-design-pattern/"},"frontmatter":{"date":"22년 10월 29일","title":"React 기반 제품을 개발할 때 고려해 볼 만한 디자인 패턴","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/93a45880-52dd-4aff-ad4e-9f1e47f5fe4b","tags":["frontend"],"description":"React 제품 개발, 유용한 몇 가지 디자인 패턴"}},{"fields":{"slug":"/spawn-node-gyp-enoent/"},"frontmatter":{"date":"22년 09월 17일","title":"Spawn node-gyp ENOENT","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/b40ef5d8-6697-41ff-83e6-3e79aef7617a","tags":["issues"],"description":"Spawn node-gyp ENOENT 에러 해결"}},{"fields":{"slug":"/components-styling/"},"frontmatter":{"date":"22년 03월 12일","title":"리액트 컴포넌트 스타일링 정리","titleImage":"../images/contents/components-styling/react.png","tags":["frontend"],"description":"리액트 기반 제품을 개발하면서 고민했던 컴포넌트 스타일링 방법에 대한 고민"}},{"fields":{"slug":"/employment-memoirs2/"},"frontmatter":{"date":"22년 02월 16일","title":"대학생 개발자 취업 회고 (2)","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c8375f1e-6bda-4de3-ab2c-55db8719e709","tags":["etc"],"description":"평범한 대학생 개발자가 2022년 상반기 취업하면서 느낀점"}},{"fields":{"slug":"/employment-memoirs/"},"frontmatter":{"date":"22년 02월 16일","title":"대학생 개발자 취업 회고 (1)","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c8375f1e-6bda-4de3-ab2c-55db8719e709","tags":["etc"],"description":"평범한 대학생 개발자가 2022년 상반기 취업하면서 느낀점"}},{"fields":{"slug":"/blog-remake-review2/"},"frontmatter":{"date":"21년 12월 01일","title":"Gatsby 블로그를 개발하면서","titleImage":"../images/contents/blog-remake-review2/gatsby.png","tags":["etc","frontend"],"description":"Next.js에서 Gatsby로 블로그를 이전하면서 느낀 점"}},{"fields":{"slug":"/covid-19-api-update/"},"frontmatter":{"date":"21년 11월 30일","title":"COVID-19 API 업데이트","titleImage":"../images/contents/covid-19-api-update/covid-19-api.png","tags":["project","backend"],"description":"단계적 일상회복에 따른 Covid-19 API 업데이트"}},{"fields":{"slug":"/korea-webtoon-api-update/"},"frontmatter":{"date":"21년 11월 17일","title":"Webtoon API 개발","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/99b6a086-1283-4088-81cc-4cb857c3ccdb","tags":["project","backend"],"description":"비공식 한국 웹툰 서비스 통합 API 개발"}},{"fields":{"slug":"/nest-js/"},"frontmatter":{"date":"21년 10월 29일","title":"NestJS 웹서버 구축하기","titleImage":"../images/contents/nest-js/nest.jpg","tags":["backend"],"description":"Typescript를 이용한 NestJS 코드 작성"}},{"fields":{"slug":"/knu-lms-scheduler/"},"frontmatter":{"date":"21년 10월 14일","title":"KNU LMS Scheduler 프로젝트","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/5ce48afd-9e2c-47c0-82ed-f9deac8556f6","tags":["project","data","frontend"],"description":"공주대학교 비대면 강의 시스템 편의성 개선 프로젝트"}},{"fields":{"slug":"/gititle-project/"},"frontmatter":{"date":"21년 09월 14일","title":"Gititle 프로젝트","titleImage":"https://user-images.githubusercontent.com/71566740/135963287-e5c18f62-da16-4dda-98cb-1dd4a7c2b720.png","tags":["project","frontend"],"description":"좋은 커밋 메시지를 작성하기 위한 프로젝트"}},{"fields":{"slug":"/sass-compiler/"},"frontmatter":{"date":"21년 09월 01일","title":"Live Sass Compiler 사용하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/f3841a12-33f5-4994-b147-b38b5a3f5e23","tags":["frontend"],"description":"편리한 Sass 사용을 위한 visual studio code 익스텐션"}},{"fields":{"slug":"/nodejs-crawling/"},"frontmatter":{"date":"21년 08월 31일","title":"크롤링을 통한 데이터 수집하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c9cd8b87-f909-475c-80fe-4f63fb05ad2a","tags":["data"],"description":"Node.js 크롤링을 통한 데이터 수집"}},{"fields":{"slug":"/copilot-review/"},"frontmatter":{"date":"21년 08월 26일","title":"Copilot 사용 후기","titleImage":"../images/contents/copilot-review/copilot.png","tags":["etc"],"description":"Github의 코딩 AI, Copilot 한 달 사용 리뷰"}},{"fields":{"slug":"/typescript-express-server/"},"frontmatter":{"date":"21년 08월 12일","title":"Typescript + Express 서버 구축하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/85477ff3-413d-4615-9976-ed0c0cbd9fdc","tags":["backend"],"description":"Typescript를 이용한 Express 서버 구축"}},{"fields":{"slug":"/blog-remake-review1/"},"frontmatter":{"date":"21년 08월 02일","title":"Next.js 블로그를 떠나는 이유","titleImage":"../images/contents/blog-remake-review1/nextjs.png","tags":["etc","frontend"],"description":"블로그 이전 준비"}},{"fields":{"slug":"/good-commit-message/"},"frontmatter":{"date":"21년 07월 03일","title":"Git Commit Message Convention","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/0c061905-eb53-4a8c-a277-6519e1ce2a49","tags":["devOps"],"description":"Git Commit Message 작성을 위한 나와의 약속"}}]},"previous":{"fields":{"slug":"/nodejs-crawling/"},"frontmatter":{"title":"크롤링을 통한 데이터 수집하기","titleImage":"https://github.com/HyeokjaeLee/hyeokjaelee.github.io/assets/71566740/c9cd8b87-f909-475c-80fe-4f63fb05ad2a"}},"next":{"fields":{"slug":"/gititle-project/"},"frontmatter":{"title":"Gititle 프로젝트","titleImage":"https://user-images.githubusercontent.com/71566740/135963287-e5c18f62-da16-4dda-98cb-1dd4a7c2b720.png"}}},"pageContext":{"id":"1703fb05-42d2-53b9-b60d-ca30bd180545","previousPostId":"0824efef-572d-57eb-8412-29b16dff3553","nextPostId":"234f70ab-32d7-5718-b5fc-70992ff521ea"}},"staticQueryHashes":["2039569036","2964855266","3768041815","3959992161","4278130389"],"slicesMap":{}}